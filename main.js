const BALLOONS = [
    "shariki/–≥–æ–ª—É–±–æ–π–ù–®.png",
    "shariki/–∂–µ–ª—Ç—ã–π–ù–®.png",
    "shariki/–∑–µ–ª–µ–Ω—ã–π–ù–®.png",
    "shariki/—Ä–æ–∑–æ–≤—ã–π–ù–®.png",
    "shariki/—Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π–ù–®.png"
];
const colors1 = [
"#00FFFF",	
"#00FFFF",
"#E0FFFF",
"#AFEEEE",
"#7FFFD4",	
"#40E0D0",	
"#48D1CC",
"#00CED1",	
"#4682B4",
"#B0E0E6",	
"#ADD8E6",
"#87CEEB",	
"#87CEFA",	
"#00BFFF",
"#1E90FF",
"#6495ED",		
"#7B68EE",	
"#4169E1"
];
const btn = document.getElementById("btnClick");

btn.addEventListener("click", () => {
    btn.style.transform = "scale(0.9)";
    btn.style.transition = "transform 0.09s ease";

    setTimeout(() => {
        btn.style.transform = "scale(1)";
    }, 100);
});


BALLOONS.forEach(src => {
    const img = new Image();
    img.src = src;
});

const button = document.getElementById("btnClick");
const container = document.getElementById("balloonsContainer");
let clickF = 0;

button.addEventListener("click", () => {

    clickF++;
    // –ø—Ä–æ –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω –æ–±—î–∫—Ç–∞ –ø–æ –æ—Å—è–º
    const rect = button.getBoundingClientRect();
    const centerX = rect.left + rect.width / 4;
    const centerY = rect.top;
    let count = 0;
    if (clickF === 1) {
        count = 1;
    }
    else if (clickF === 2) {
        count = 3;

    }
    else if (clickF === 3) {
        count = 7;
    }
    else if (clickF === 4) {
        count = 11;
    }

    if (clickF < 5) {
        for (let i = 0; i < count; i++) {
            setTimeout(() => {
                const balloon = document.createElement("img");
                balloon.src = BALLOONS[Math.floor(Math.random() * BALLOONS.length)];
                balloon.classList.add("balloon");
                balloon.style.width = "100px";
                balloon.style.height = "120px";
                balloon.style.left = centerX + "px";
                balloon.style.top = centerY + "px";
                balloon.style.position = "absolute";

                // --- –ê–Ω–∏–º–∞—Ü–∏—è —Å —Ä–∞—Å–∫–∞—á–∫–æ–π –∏ –ø–æ–¥—ä—ë–º–æ–º ---
                let angle = 0;

                let swingSpeed = 0.01 + Math.random() * 0.01; // —Å–∫–æ—Ä–æ—Å—Ç—å —Ä–∞—Å–∫–∞—á–∫–∏
                let maxTilt = 5 + Math.random() * 5;           // —É–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞
                let swing = 50 + Math.random() * 50;          // –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–∞—Ö
                let riseSpeed = 0.5 + Math.random() * 0.5;    // –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π –ø–æ–¥—ä—ë–º
                let posY = 0;

                const direction = (i % 2 === 0) ? 1 : -1;
                function animateBalloon() {
                    angle += swingSpeed;

                    const swingFactor = Math.sin(angle);

                    const tilt = swingFactor * maxTilt;

                    const offsetX = direction * swingFactor * swing + Math.random() * 0.5;
                    posY += riseSpeed;
                    const offsetY = -posY;

                    balloon.style.transform = `translate(${offsetX}px, ${offsetY}px) rotate(${tilt}deg)`;

                    // —É–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –ø–æ—Å–ª–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≤–µ—Ä—Ö–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü—ã
                    if (offsetY + balloon.height > -450) {
                        requestAnimationFrame(animateBalloon);
                    } else {
                        balloon.remove();
                    }
                }
                animateBalloon();
                container.appendChild(balloon);
            }, i * 100); // ‚è≥ –∑–∞—Ç—Ä–∏–º–∫–∞: –∫–æ–∂–µ–Ω –Ω–∞—Å—Ç—É–ø–Ω–∏–π —á–µ—Ä–µ–∑ 0.1 —Å–µ–∫—É–Ω–¥—É

        }
    } else if (clickF === 5) {
        // –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–æ–Ω—Ñ–µ—Ç—Ç–∏ –∏ —Ç–µ–∫—Å—Ç –∫–∞–∫ –µ—Å—Ç—å
        button.remove();
        confetti({
            particleCount: 500,
            spread: 70,
            startVelocity: 50,
            origin: { y: 0.6 },
            colors: randomColors(20),
            ticks: 300,
        });

        setTimeout(() => {
            setInterval(() => {
                confetti({
                    particleCount: 2,
                    startVelocity: 0,
                    spread: 360,
                    ticks: 400,
                    colors: randomColors(20),
                    origin: { x: Math.random(), y: 0 }
                });
            }, 20);
        }, 1000);

        setTimeout(() => {

            function insertSoftHyphens(word) {
                const vowels = "–∞–µ—ë–∏–æ—É—ã—ç—é—è";
                let result = "";

                for (let i = 0; i < word.length; i++) {
                    result += word[i];

                    // –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—Å—Ç–∞–≤–∫–∏ –º—è–≥–∫–æ–≥–æ –ø–µ—Ä–µ–Ω–æ—Å–∞
                    const charsBefore = i + 1;           // —Å–∫–æ–ª—å–∫–æ —Å–∏–º–≤–æ–ª–æ–≤ —É–∂–µ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                    const charsAfter = word.length - i - 1; // —Å–∫–æ–ª—å–∫–æ —Å–∏–º–≤–æ–ª–æ–≤ –æ—Å—Ç–∞–ª–æ—Å—å –ø–æ—Å–ª–µ —Ç–µ–∫—É—â–µ–≥–æ
                    if (
                        vowels.includes(word[i].toLowerCase()) &&
                        charsBefore > 2 &&       // –º–∏–Ω–∏–º—É–º 2 –±—É–∫–≤—ã –¥–æ
                        charsAfter > 2           // –º–∏–Ω–∏–º—É–º 2 –±—É–∫–≤—ã –ø–æ—Å–ª–µ
                    ) {
                        result += "&shy;";
                    }
                }

                return result;
            }

            function wrapWithHyphen(text) {
                return text.split(" ")
                    .map(w => insertSoftHyphens(w))
                    .join(" ");
            }



            function wrapWithHyphen(text) {
                return text.split(" ")
                    .map(w => insertSoftHyphens(w))
                    .join(" ");
            }


            const board = document.createElement("div");
            board.id = "board";
            const textB = document.createElement("p");
            textB.id = "pText";
            const myText = `–ñ–µ–ª–∞—é –ø–æ–±–æ–ª—å—à–µ —É–ª—ã–±–æ–∫ —Ä–∞–¥–æ—Å—Ç–∏ –∏ —Å–º–µ—Ö–∞ –≤–æ–∫—Ä—É–≥,
—á—Ç–æ–±—ã –º–µ—á—Ç—ã –≤—Å–µ —Å–±—ã–≤–∞–ª–∏—Å—å –∞ –∑–∞–¥—É–º–∫–∏ —É–¥–∞–≤–∞–ª–∏—Å—åüëç, —É–¥–∞—á–∏ –≤ —É—á–µ–±–µ –∫–∞–∫ –Ω–∏–∫–∞–∫ —É–∂–µ –Ω–µ —à–∫–æ–ª—å–Ω–∏—Ü–∞,
–µ—à—å –ø–æ–±–æ–ª—å—à–µ —Ä–∞—Å—Ç–∏—à–∫–∏ –∏ —Ä–æ—Å—Ç–∏ –±–æ–ª—å—à–æ–π –∏ —Å–∏–ª—å–Ω–æ–π, –ø—Ä–∏ —ç—Ç–æ–º –æ—Å—Ç–∞–≤–∞–π—Å—è —Ç–∞–∫–æ–π –∂–µ —Å–Ω–æ–≥—Å—à–∏–±–∞—Ç–µ–ª—å–Ω–æ–π,
–æ–±–≤–æ—Ä–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π –∏ –Ω–µ–ø–æ–≤—Ç–æ—Ä–∏–º–æ–π. –ñ–µ–ª–∞—é —á—Ç–æ–±—ã —ç—Ç–æ—Ç –≥–æ–¥ –¥–ª—è —Ç–µ–±—è –ø—Ä–æ—à–µ–ª –ª–µ–≥–∫–æ –∏ –±–µ–∑ –Ω–∞–ø—Ä—è–≥–∞, 
—á—Ç–æ–±—ã –Ω–∞—Ä–∏—Å–æ–≤–∞–ª–∞ –∫—É—á–∞ –∫—Ä–∞—Å–∏–≤—ã—Ö –∫–∞—Ä—Ç–∏–Ω–æ–∫ –∏–ª–∏ —á—Ç–æ —Ç—ã —Ç–∞–º —Ä–∏—Å—É–µ—à—å, –Ω—É –∏ –ø—Ä–æ—Å—Ç–æ –±—ã–ª–∞ —Å—á–∞—Å—Ç–ª–∏–≤–∞ 
–∏ –≤—Å–µ–≥–¥–∞ —É–ª—ã–±–∞–ª–∞—Å—åüíÉ. –û—á–µ–Ω—å —Ö–æ—Ç–µ–ª –±—ã –ø—Ä–æ–≤–µ—Å—Ç–∏ —ç—Ç–æ—Ç –¥–µ–Ω—å —Å —Ç–æ–±–æ–π –∏ —Å–∫–∞–∑–∞—Ç—å —ç—Ç–æ –≤—Å—ë –≤ –∂–∏–≤—É—é,
–±—É–¥—É –Ω–∞–¥–µ—è—Ç—å—Å—è —á—Ç–æ –≤ —Å–ª–µ–¥—É—é—â–µ–º –≥–æ–¥—É —ç—Ç–æ –≤—Å—ë –∂–µ –ø–æ–ª—É—á–∏—Ç—å—Å—è. –ñ–¥—É —Ñ–æ—Ç–æ—á–µ–∫ —Å –î–† –∏ –µ—â—ë —Ä–∞–∑ —Å –ü—Ä–∞–∑–¥–Ω–∏–∫–æ–º.‚ù§Ô∏è`;

            textB.innerHTML = wrapWithHyphen(myText, 30);
            board.appendChild(textB);
            document.body.appendChild(board);
            requestAnimationFrame(() => board.classList.add("show"));
        }, 10000);

        setTimeout(() => {
            const Tdiv = document.createElement("div");
            const Th1 = document.createElement("h1");

            Tdiv.id = "titel";
            Th1.id = "titelH";

            Th1.textContent = "–° –¥–Ω—ë–º —Ä–æ–∂–¥–µ–Ω–∏—è";
            
            Tdiv.appendChild(Th1);
            document.body.appendChild(Tdiv);

        }, 2000);

    }
});
function getRandomColor() {
  return colors1[Math.floor(Math.random() * colors1.length)];
}

function randomColors(n) {
    return Array.from({ length: n }, () => '#' + Math.floor(Math.random() * 16777215).toString(16));
}
